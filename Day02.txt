1. 컨드롤러에서 화면으로 전송되는 데이터의 유효범위 (Scope)
    - Application Scope: 웹 어플리케이션이 구동되는 유효한 데이터를 생성
    - Session Scope: 세션은 사용자가 웹 페이지에 접속 시 자동으로 생성
                     WAS에 설정된 시간동안 웹 페이지에서 동작이 없을 시 자동 소멸
                     동작이 계속 취해지면 설정된 시간이 계속 유지
                     세션 유효범위는 세션이 유지되는 동안 유효한 데이터를 생성
                     HttpSession 객체를 사용하여 설정 (로그인 정보 등을 담아서 여러 페이지나 Request에서 사용 가능)
    - Request Scope: 하나의 요청이 실행되는 동안에만 유효한 데이터를 생성
                     요청 처리가 완료되면 사라짐
                     Model 객체를 이용하여 설정 가능
    - 스코프 범위: Application Scope > Session Scope > Request Scope

2. el 표기법과 jstl 
    - el(Expression Laguage): 기존 JSP에서는 자바 코드나 자바 변수를 사용할 때 
                              <%= 변수 %> 다음과 같이 사용했음
                              el 표기법은 자바 코드, 자바 변수를 ${변수} 이런식으로 축약하여 사용할 수 있도록 설정해줌
    - jstl: 자바변수를 이용할 때 조건이나 반복문을 사용할 수 있도록 해주는 라이브러리
            예를 들어 로그인됐을 때 마이페이지를 보여줘야되는 경우와 로그인이 되지 않았을 때 로그인페이지를 보여줘야 되는 경우에 
            <c:if></c:if>,<c:choose></c:choose> jstl 태그를 이용하여 표시

3. Spring과 ORM 프레임워크
    - ORM 프레임워크가 등장하기 전에는 JDBC 프로그래밍을 통해서 DB연동
    - JDBC 프로그래밍은 DB 연결 클래스를 따로 작성해야하고 query문도 자바 클래스로 작성해야해서 매우 불편했음
    - ORM 프레임워크가 등장하면서 DB 연결 설정이나 query문이 클래스에서 분리되어 편하게 사용할 수 있게 됨
    - ORM 프레임워크: ORM(Object Relation Mapping) 객체와 DB 테이블을 매핑하여 사용하는 프레임 워크
                     DB 연결, 쿼리문을 클래스에서 분리된 파일에 작성
                종류: Mybatis, iBatis, Hibernate ....